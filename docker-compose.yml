version: "3.8"
services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: on-failure
    networks:
      - backend
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
#      - prometheus:/var/lib/prometheus

  alertmanager:
    image: prom/alertmanager:v0.21.0
    container_name: alert-manager
    restart: on-failure
    networks:
        - backend
    ports:
      - 9093:9093
    volumes:
        - ./alert_manager:/etc/alermanager

  node-exporter:
    image: prom/node-exporter:v1.1.2
    container_name: node-exporter
    networks:
      - backend
    ports:
      - 9100:9100

  blackbox-exporter:
    image: prom/blackbox-exporter:v0.18.0
    container_name: blackbox-exporter
    networks:
      - backend
    ports:
      - 9115:9115
    volumes:
      - ./blackbox/config.yml:/etc/blackbox_exporter/config.yml

  pushgateway:
    image: prom/pushgateway:v1.4.0
    container_name: pushgateway
    networks:
      - backend
    ports:
      - 9091:9091

  cadvisor:
    image: google/cadvisor:v0.33.0
    container_name: cadvisor
    networks:
      - backend
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  reports:
    image: skedler/reports:4.22.0
    container_name: reports
    privileged: true
    networks:
      - backend
    ports:
      - 3001:3000
    cap_add:
      - SYS_ADMIN
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - report:/var/lib/skedler
#      - ./skedler/reporting.yml:/opt/skedler/config/reporting.yml

  grafana:
    image: grafana/grafana:7.5.2
    container_name: grafana
    restart: on-failure
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=password
    networks:
      - backend
    ports:
      - 3000:3000
    volumes: []
#    - grafana:/var/lib/grafana
    depends_on:
      - prometheus

  app:
    build:
      context: go_app
      dockerfile: Dockerfile
    image: danijelradakovic/go_app
    container_name: app
    restart: on-failure
    networks:
      - backend
    ports:
      - 8000
    depends_on:
      - prometheus

  gateway:
    image: nginx:1.19.8-alpine
    container_name: gateway
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - backend
    ports:
      - 4000:4000
    depends_on:
      - app

volumes:
  prometheus:
    name: prometheus-database
  grafana:
    name: grafana-database
  report:
    name: report-data

networks:
  backend:
    name: backend
    driver: bridge
